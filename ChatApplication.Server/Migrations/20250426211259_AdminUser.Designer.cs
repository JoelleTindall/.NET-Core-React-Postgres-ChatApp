// <auto-generated />
using System;
using ChatApplication.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ChatApplication.Server.Migrations
{
    [DbContext(typeof(ChatAppContext))]
    [Migration("20250426211259_AdminUser")]
    partial class AdminUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ChatApplication.Server.Models.Avatar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Avatars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FilePath = "img/cat.png"
                        },
                        new
                        {
                            Id = 2,
                            FilePath = "img/egg.png"
                        },
                        new
                        {
                            Id = 3,
                            FilePath = "img/mad.png"
                        });
                });

            modelBuilder.Entity("ChatApplication.Server.Models.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("ChatApplication.Server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AvatarId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AvatarId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvatarId = 1,
                            CreatedAt = new DateTime(2025, 4, 26, 21, 12, 58, 716, DateTimeKind.Utc).AddTicks(5568),
                            IsAdmin = true,
                            PasswordHash = "sZjib9QP5/l6jwBx0A4lmnOFYFBF87J5SRSDX2ciRqL4dJDCL2qQCmS+Cj0s3mLQgw+NmtvtuwO2xfIZyPKv0w==",
                            PasswordSalt = "IiGE63gEmQfh/hpj5oodmAM5n/AcT3BDP9VRWfi3vroe4KLLIJ1FHMU9H4GD4HJ30sFYHs+NOxd+YDP9kG1jPzJJtyIruEpluPjBAK9nMZ8YHHXOaw9u6PX4NyzDZf6rQ8Jv/wzofjmOR8Jexm7fiGtVkVymsrh+VoO5K8lgxHo=",
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("ChatApplication.Server.Models.Chat", b =>
                {
                    b.HasOne("ChatApplication.Server.Models.User", "User")
                        .WithMany("Chats")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChatApplication.Server.Models.User", b =>
                {
                    b.HasOne("ChatApplication.Server.Models.Avatar", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarId");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("ChatApplication.Server.Models.User", b =>
                {
                    b.Navigation("Chats");
                });
#pragma warning restore 612, 618
        }
    }
}
